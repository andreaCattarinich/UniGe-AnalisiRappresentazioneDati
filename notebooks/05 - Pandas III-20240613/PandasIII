{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1SxdlR09V9u0_XSJ6DSCeeKFzgW9z50i0","timestamp":1712521131503}],"collapsed_sections":["k-E7CqkJgYqq","FHf46Blacq3l"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","#Introduzione a Pandas\n","\n","---\n","\n","\n","*Antonio Emanuele Cinà, Assistant Professor @ University of Genoa*\n","\n","**Analisi e Rappresentazione dei Dati** --\n","8 Aprile 2024\n","\n","## Lezione 5: Pandas\n","\n","\n","Materiale: https://tinyurl.com/ARD24-L5"],"metadata":{"id":"TM4vlKSxT_YB"}},{"cell_type":"markdown","source":["# Modificare i dati con le maschere"],"metadata":{"id":"5PncSfgRa2Km"}},{"cell_type":"markdown","metadata":{"id":"LsfwckRMBsAU"},"source":["Inoltre le maschere tornano molto utili quando vogliamo andare a modificare contemporaneamente tutte le righe che rispettano una determinata condizione.\n","\n","Supponiamo ora di voler contrassegnare tutte le persone che lavorano in **Veneto** con la label **SI** nella colonna **Verificato**, ci basterà creare una maschera che utilizzeremo poi per modificare le righe.\n"]},{"cell_type":"code","source":["import pandas as pd\n","path_dip_csv = \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/dipendenti.csv\"\n","\n","data = pd.read_csv(path_dip_csv)"],"metadata":{"id":"UUD4kXQgi-Ac"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["maschera_veneto = data['Regione'] == \"Veneto\"\n","\n","data.loc[maschera_veneto, \"Verificato\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kcRL1Pxrisjw","executionInfo":{"status":"ok","timestamp":1712325396974,"user_tz":-120,"elapsed":10,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"46a52f4a-49ba-4c96-87d8-90a48b2c72e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Verificato\n","NO    21\n","SI    13\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"-u4FPWN9WNGn","colab":{"base_uri":"https://localhost:8080/"},"outputId":"2492f9ac-bf65-4c9e-97e8-b804ed37b8e6","executionInfo":{"status":"ok","timestamp":1712325398732,"user_tz":-120,"elapsed":272,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}}},"source":["maschera_veneto = data['Regione'] == \"Veneto\"\n","\n","data.loc[maschera_veneto, \"Verificato\"] = 'SI'\n","\n","data.loc[maschera_veneto,\"Verificato\"].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Verificato\n","SI    38\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### And, Or e Not"],"metadata":{"id":"dsBW5BsRkQGs"}},{"cell_type":"markdown","source":["Possiamo anche utilizzare gli operatori `&` (**and**), `|` (**or**) e ~ (**not**) per creare ricerche più sofisticate:\n","\n","L'esempio seguente mostra come selezionare tutti i dipendenti che **NON** vivono in **Veneto** e neppure in **Toscana**."],"metadata":{"id":"fDgROTHYjJdK"}},{"cell_type":"code","source":["# definisci la maschera con l'operatore OR (|)\n","veneto_toscana = (data.Regione==\"Veneto\") | (data.Regione==\"Toscana\")\n","\n","# prendi tutti i dati NON nella maschera\n","data[~veneto_toscana]"],"metadata":{"id":"I9v_iZcWg2T-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data[ ~((data.Regione==\"Veneto\") | (data.Regione==\"Toscana\")) ]"],"metadata":{"id":"7apCd6DqjI10","colab":{"base_uri":"https://localhost:8080/","height":411},"outputId":"4320c0de-fb7a-4ede-b557-f8571e124256","executionInfo":{"status":"ok","timestamp":1712325400748,"user_tz":-120,"elapsed":366,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID         Nome   Età         Regione  Salario Verificato\n","0    829744        Elona   NaN         Sicilia   1921.0         NO\n","1    800269       Cheikh  53.0         Abruzzo   1563.0         SI\n","2    823929     Girolama  30.0  Emilia Romagna   2144.0         SI\n","3    842108        Marwa  60.0          Umbria   1798.0         NO\n","5    888819         Edda  21.0       Lombardia   2339.0         NO\n","..      ...          ...   ...             ...      ...        ...\n","994  848039        Magda  18.0  Emilia Romagna   2353.0         NO\n","996  870201        Erjon  59.0             NaN   2547.0         NO\n","997  886127  Carla maria  23.0        Campania   2149.0         NO\n","998  847566     El mehdi  32.0             NaN   1817.0         NO\n","999  891216        Suada  23.0             NaN   2623.0         NO\n","\n","[916 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b4f588c9-d3f0-4a3a-9709-a22b71efc4fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>829744</td>\n","      <td>Elona</td>\n","      <td>NaN</td>\n","      <td>Sicilia</td>\n","      <td>1921.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>800269</td>\n","      <td>Cheikh</td>\n","      <td>53.0</td>\n","      <td>Abruzzo</td>\n","      <td>1563.0</td>\n","      <td>SI</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>823929</td>\n","      <td>Girolama</td>\n","      <td>30.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2144.0</td>\n","      <td>SI</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>842108</td>\n","      <td>Marwa</td>\n","      <td>60.0</td>\n","      <td>Umbria</td>\n","      <td>1798.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>888819</td>\n","      <td>Edda</td>\n","      <td>21.0</td>\n","      <td>Lombardia</td>\n","      <td>2339.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>994</th>\n","      <td>848039</td>\n","      <td>Magda</td>\n","      <td>18.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2353.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>870201</td>\n","      <td>Erjon</td>\n","      <td>59.0</td>\n","      <td>NaN</td>\n","      <td>2547.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>886127</td>\n","      <td>Carla maria</td>\n","      <td>23.0</td>\n","      <td>Campania</td>\n","      <td>2149.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>847566</td>\n","      <td>El mehdi</td>\n","      <td>32.0</td>\n","      <td>NaN</td>\n","      <td>1817.0</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>891216</td>\n","      <td>Suada</td>\n","      <td>23.0</td>\n","      <td>NaN</td>\n","      <td>2623.0</td>\n","      <td>NO</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>916 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4f588c9-d3f0-4a3a-9709-a22b71efc4fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4f588c9-d3f0-4a3a-9709-a22b71efc4fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4f588c9-d3f0-4a3a-9709-a22b71efc4fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-467e6cb3-b9ad-4a6a-ae1f-7052d8b96683\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-467e6cb3-b9ad-4a6a-ae1f-7052d8b96683')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-467e6cb3-b9ad-4a6a-ae1f-7052d8b96683 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data[ ~((data\",\n  \"rows\": 916,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28913,\n        \"min\": 800127,\n        \"max\": 899878,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          867186,\n          827517,\n          830935\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 695,\n        \"samples\": [\n          \"Ecaterina\",\n          \"Ismail\",\n          \"Cesare\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.592338421044401,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          27.0,\n          41.0,\n          56.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Sicilia\",\n          \"Abruzzo\",\n          \"Molise\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 402.93113080349553,\n        \"min\": 1300.0,\n        \"max\": 2699.0,\n        \"num_unique_values\": 633,\n        \"samples\": [\n          1662.0,\n          1807.0,\n          1479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SI\",\n          \"NO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"k-E7CqkJgYqq"},"source":["### Esercizio 4\n","\n","1. Prendere il dataset **penguins_size.csv** e calcolare il peso medio dei pinguini maschi"]},{"cell_type":"code","source":["path_dip_csv = \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/penguins_size.csv\"\n","\n","data = pd.read_csv(path_dip_csv)\n","\n","only_male = data[data[\"sex\"] == \"MALE\"]\n","\n","peso_medio = only_male[\"body_mass_g\"].mean()\n","peso_medio"],"metadata":{"id":"bZnmzOT6gYqr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711108068064,"user_tz":-60,"elapsed":441,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"fa6b22ff-4bcc-46dc-b125-35ea853a9dce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4545.684523809524"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["peso_medio/1000"],"metadata":{"id":"__yMRZ5ngamC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711108085115,"user_tz":-60,"elapsed":281,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"54d8ba9c-655c-4ad2-d0df-1fcdcacbd5f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.545684523809524"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","source":["### Esercizio 5\n","\n","2. E' un pinguino maschio o un pinguino femmina quello che pesa di più? Qual è la differenza tra i due pesi?"],"metadata":{"id":"FHf46Blacq3l"}},{"cell_type":"code","source":["only_male = data[\"sex\"] == \"MALE\"\n","max_male = data[only_male][\"body_mass_g\"].max()\n","\n","only_female = data[\"sex\"] == \"FEMALE\"\n","max_female = data[only_female][\"body_mass_g\"].max()\n","\n","print(f\"{max_male=}, {max_female=}\")\n","\n","difference = max_male - max_female\n","\n","print(f\"{difference=}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PyLXNQPvdGIo","executionInfo":{"status":"ok","timestamp":1711108289795,"user_tz":-60,"elapsed":515,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"369a1a66-a9e8-416d-e459-0cb13c66e4e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["max_male=6300.0, max_female=5200.0\n","difference=1100.0\n"]}]},{"cell_type":"markdown","source":["### Esercizio 6\n","\n","3. Dal dataset **dipendenti.csv**, quanti sono i dipendenti che hanno età minore o uguale a 25 anni?\n","\n","- Qual è il loro salario medio?\n","- Chi percepisce il salario minore?\n","- Chi percepisce il salario maggiore?"],"metadata":{"id":"rJLgLRM6ewdg"}},{"cell_type":"code","source":["path_dip_csv =  \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/dipendenti.csv\"\n","\n","data = pd.read_csv(path_dip_csv)"],"metadata":{"id":"ulH21PvoeGWn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_eta_25 = data[data[\"Età\"] <= 25]\n","data_eta_25.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cyOg1CBleGT5","executionInfo":{"status":"ok","timestamp":1711108714193,"user_tz":-60,"elapsed":410,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"a5963aba-9e28-4381-d497-6e92d37f9f9a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(193, 6)"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["data_eta_25[\"Salario\"].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bkucFVvrf7BZ","executionInfo":{"status":"ok","timestamp":1711108739902,"user_tz":-60,"elapsed":264,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"11ce2f15-1e23-4544-fc3f-b090b3dede67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1985.1657142857143"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["index_min = data_eta_25[\"Salario\"].argmin()\n","\n","data_eta_25.iloc[index_min]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_lXE6MTLeGQw","executionInfo":{"status":"ok","timestamp":1711108764046,"user_tz":-60,"elapsed":284,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"f184ce33-b83c-41ae-d4e3-0ff105ea6bf2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID            853235\n","Nome           Delia\n","Età             20.0\n","Regione        Lazio\n","Salario       1336.0\n","Verificato        SI\n","Name: 515, dtype: object"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["index_max = data_eta_25[\"Salario\"].argmax()\n","\n","data_eta_25.iloc[index_max]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n1IE-6r2jShd","executionInfo":{"status":"ok","timestamp":1711108826171,"user_tz":-60,"elapsed":347,"user":{"displayName":"Antonio Cinà","userId":"11010244090084728487"}},"outputId":"1b4bde82-9c3e-4a40-f0c8-3cd6208ffcda"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID              816931\n","Nome          Abdellah\n","Età               22.0\n","Regione         Veneto\n","Salario         2695.0\n","Verificato          NO\n","Name: 547, dtype: object"]},"metadata":{},"execution_count":73}]},{"cell_type":"markdown","source":["### Esercizio 7\n","\n","4. Utilizzando il dataset **dipendenti.csv**, aggiungere 150€ al salario dei dipedenti che hanno un'età minore o uguale a 25 anni ed un salario minore di 1500€."],"metadata":{"id":"oYRv6qKwYc5x"}},{"cell_type":"code","source":["path_dip_csv =  \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/dipendenti.csv\"\n","\n","data = pd.read_csv(path_dip_csv)\n","\n","mask_query = ((data[\"Salario\"]<1500) & (data[\"Età\"] <=25))\n","\n","print(data[mask_query][\"Salario\"].head())\n","\n","data.loc[mask_query, \"Salario\"] = data[mask_query][\"Salario\"]+150\n","\n","print(data[mask_query][\"Salario\"].head())"],"metadata":{"id":"IRx3u-NXZft2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711098959372,"user_tz":-60,"elapsed":430,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"e4e40c80-9847-4842-adc2-316795adaee9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["37     1471.0\n","50     1463.0\n","95     1360.0\n","215    1480.0\n","240    1393.0\n","Name: Salario, dtype: float64\n","37     1621.0\n","50     1613.0\n","95     1510.0\n","215    1630.0\n","240    1543.0\n","Name: Salario, dtype: float64\n"]}]},{"cell_type":"markdown","source":["---\n","\n","# Gestire le colonne del dataframe"],"metadata":{"id":"qDPwIc8_-0lc"}},{"cell_type":"markdown","source":["Un'altra cosa molto utile da sapere quando lavoriamo con i dataframe è come gestire le colonne, in particolare:\n","- Crearne di nuove\n","- Rinominarle\n","- Eliminarle"],"metadata":{"id":"ZZtRvPZ2-9GX"}},{"cell_type":"markdown","source":["## Creare una nuova colonna"],"metadata":{"id":"UQWEj_dyAFE3"}},{"cell_type":"markdown","source":["Creare una nuova colonna è molto semplice, infatti basterà utilizzare la seguente sintassi `data[\"nome nuova colonna\"] = nuovi_dati`.\n","\n","Ad esempio, se vogliamo creare una nuova colonna con il Salario annuo dei dipendenti lo possiamo fare nel seguente modo:"],"metadata":{"id":"_t3IW33bAJl1"}},{"cell_type":"code","source":["import pandas as pd\n","path_dip_csv = \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/dipendenti.csv\"\n","data = pd.read_csv(path_dip_csv)\n","\n","\n","mensilità = 13\n","data[\"Salario_Annuale\"] = data[\"Salario\"] * mensilità\n","\n","data.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"NeGD_KT0AIIQ","executionInfo":{"status":"ok","timestamp":1712329857378,"user_tz":-120,"elapsed":1538,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"1a8ad91a-0c03-4f80-8730-7f0f5a7243a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID      Nome   Età         Regione  Salario Verificato  Salario_Annuale\n","0  829744     Elona   NaN         Sicilia   1921.0         NO          24973.0\n","1  800269    Cheikh  53.0         Abruzzo   1563.0         SI          20319.0\n","2  823929  Girolama  30.0  Emilia Romagna   2144.0         SI          27872.0"],"text/html":["\n","  <div id=\"df-e287bd2d-f9c8-45df-aaba-ae741ecbbec3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","      <th>Salario_Annuale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>829744</td>\n","      <td>Elona</td>\n","      <td>NaN</td>\n","      <td>Sicilia</td>\n","      <td>1921.0</td>\n","      <td>NO</td>\n","      <td>24973.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>800269</td>\n","      <td>Cheikh</td>\n","      <td>53.0</td>\n","      <td>Abruzzo</td>\n","      <td>1563.0</td>\n","      <td>SI</td>\n","      <td>20319.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>823929</td>\n","      <td>Girolama</td>\n","      <td>30.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2144.0</td>\n","      <td>SI</td>\n","      <td>27872.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e287bd2d-f9c8-45df-aaba-ae741ecbbec3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e287bd2d-f9c8-45df-aaba-ae741ecbbec3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e287bd2d-f9c8-45df-aaba-ae741ecbbec3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0b14e1c-d01f-4172-a876-c4049fbc5a3d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0b14e1c-d01f-4172-a876-c4049fbc5a3d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0b14e1c-d01f-4172-a876-c4049fbc5a3d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28885,\n        \"min\": 800127,\n        \"max\": 899878,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          890182,\n          815406,\n          869501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 743,\n        \"samples\": [\n          \"Giuseppe antonio\",\n          \"Samuel\",\n          \"Domenico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.61055164109007,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          27.0,\n          51.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Sicilia\",\n          \"Valle d'Aosta\",\n          \"Campania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404.1050254523617,\n        \"min\": 1300.0,\n        \"max\": 2699.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          1443.0,\n          1900.0,\n          2287.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SI\",\n          \"NO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario_Annuale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5253.3653308807025,\n        \"min\": 16900.0,\n        \"max\": 35087.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          18759.0,\n          24700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","source":["Per creare nuove colonne possiamo anche utilizzare delle funzioni personalizzate ed usare il metodo [.apply()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html).\n","\n","Il metodo `apply()` è un meccanismo versatile per applicare una funzione a dati in un DataFrame o in una Serie. Può essere utilizzato per eseguire trasformazioni complesse sui dati, applicando funzioni personalizzate, funzioni integrate di Python o funzioni lambda."],"metadata":{"id":"_YILIqcGxMVl"}},{"cell_type":"markdown","source":["La funzione `determina_classe` valuta il salario e restituisce la classe corrispondente. Poi, applichiamo questa funzione alla colonna \"Salario\" utilizzando il metodo apply, creando così la nuov colonna \"Classe\" nel DataFrame.\n","\n","\n"],"metadata":{"id":"aG6PIgiSlsng"}},{"cell_type":"code","source":["# Definizione della funzione per assegnare la classe\n","def determina_classe(salario):\n","    if salario > 2000:\n","        return 'Alto'\n","    elif salario >= 1500:\n","        return 'Medio'\n","    else:\n","        return 'Basso'\n","\n","# Applicazione della funzione alla colonna 'Salario' per creare la nuova colonna 'Classe'\n","data['Classe'] = data['Salario'].apply(determina_classe)\n","\n","data.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"0QBQx52VlSY-","executionInfo":{"status":"ok","timestamp":1712329877260,"user_tz":-120,"elapsed":433,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"4dbe70dd-d9e2-41ca-df24-570f65e6fabd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID      Nome   Età         Regione  Salario Verificato  \\\n","0  829744     Elona   NaN         Sicilia   1921.0         NO   \n","1  800269    Cheikh  53.0         Abruzzo   1563.0         SI   \n","2  823929  Girolama  30.0  Emilia Romagna   2144.0         SI   \n","\n","   Salario_Annuale Classe  \n","0          24973.0  Medio  \n","1          20319.0  Medio  \n","2          27872.0   Alto  "],"text/html":["\n","  <div id=\"df-e604ca23-cdf2-482a-a9d5-273dd3863ee7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","      <th>Salario_Annuale</th>\n","      <th>Classe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>829744</td>\n","      <td>Elona</td>\n","      <td>NaN</td>\n","      <td>Sicilia</td>\n","      <td>1921.0</td>\n","      <td>NO</td>\n","      <td>24973.0</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>800269</td>\n","      <td>Cheikh</td>\n","      <td>53.0</td>\n","      <td>Abruzzo</td>\n","      <td>1563.0</td>\n","      <td>SI</td>\n","      <td>20319.0</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>823929</td>\n","      <td>Girolama</td>\n","      <td>30.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2144.0</td>\n","      <td>SI</td>\n","      <td>27872.0</td>\n","      <td>Alto</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e604ca23-cdf2-482a-a9d5-273dd3863ee7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e604ca23-cdf2-482a-a9d5-273dd3863ee7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e604ca23-cdf2-482a-a9d5-273dd3863ee7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-81358025-d8aa-4af8-a403-aa88aa57c8b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81358025-d8aa-4af8-a403-aa88aa57c8b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-81358025-d8aa-4af8-a403-aa88aa57c8b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28885,\n        \"min\": 800127,\n        \"max\": 899878,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          890182,\n          815406,\n          869501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 743,\n        \"samples\": [\n          \"Giuseppe antonio\",\n          \"Samuel\",\n          \"Domenico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.61055164109007,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          27.0,\n          51.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Sicilia\",\n          \"Valle d'Aosta\",\n          \"Campania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404.1050254523617,\n        \"min\": 1300.0,\n        \"max\": 2699.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          1443.0,\n          1900.0,\n          2287.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SI\",\n          \"NO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario_Annuale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5253.3653308807025,\n        \"min\": 16900.0,\n        \"max\": 35087.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          18759.0,\n          24700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Classe\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medio\",\n          \"Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["## Rinominare una colonna"],"metadata":{"id":"v_w2aS2-CSRI"}},{"cell_type":"markdown","source":["Nel caso in cui dobbiamo rinominare una o più colonne possiamo utilizzare il metodo [.rename()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rename.html) specificando nel parametro `columns=` un dizionario che mappa il vecchio nome con il nuovo.\n","\n","Ad esempio, vogliamo rinominare la nuova colonna `Salario_Annuale` in `Salario_Lordo_Annuo` lo possiamo fare nel seguente modo:\n","\n"],"metadata":{"id":"pLHU8qT2CU_A"}},{"cell_type":"code","source":["rename_columns = {\"Salario_Annuale\" : \"Salario_Lordo_Annuo\"}\n","\n","data.rename(columns = rename_columns, inplace = True)\n","\n","data.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"zs-o2LBxAI9N","executionInfo":{"status":"ok","timestamp":1712329882256,"user_tz":-120,"elapsed":422,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"f06a31f5-7ca2-4966-eebb-d2944cd17ae8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID      Nome   Età         Regione  Salario Verificato  \\\n","0  829744     Elona   NaN         Sicilia   1921.0         NO   \n","1  800269    Cheikh  53.0         Abruzzo   1563.0         SI   \n","2  823929  Girolama  30.0  Emilia Romagna   2144.0         SI   \n","\n","   Salario_Lordo_Annuo Classe  \n","0              24973.0  Medio  \n","1              20319.0  Medio  \n","2              27872.0   Alto  "],"text/html":["\n","  <div id=\"df-6bee33b5-cacb-4542-ae50-1a72d87952cc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","      <th>Salario_Lordo_Annuo</th>\n","      <th>Classe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>829744</td>\n","      <td>Elona</td>\n","      <td>NaN</td>\n","      <td>Sicilia</td>\n","      <td>1921.0</td>\n","      <td>NO</td>\n","      <td>24973.0</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>800269</td>\n","      <td>Cheikh</td>\n","      <td>53.0</td>\n","      <td>Abruzzo</td>\n","      <td>1563.0</td>\n","      <td>SI</td>\n","      <td>20319.0</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>823929</td>\n","      <td>Girolama</td>\n","      <td>30.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2144.0</td>\n","      <td>SI</td>\n","      <td>27872.0</td>\n","      <td>Alto</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bee33b5-cacb-4542-ae50-1a72d87952cc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6bee33b5-cacb-4542-ae50-1a72d87952cc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6bee33b5-cacb-4542-ae50-1a72d87952cc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a2b942f-8ba1-4855-b7e1-83c1733ddd7c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a2b942f-8ba1-4855-b7e1-83c1733ddd7c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a2b942f-8ba1-4855-b7e1-83c1733ddd7c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28885,\n        \"min\": 800127,\n        \"max\": 899878,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          890182,\n          815406,\n          869501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 743,\n        \"samples\": [\n          \"Giuseppe antonio\",\n          \"Samuel\",\n          \"Domenico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.61055164109007,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          27.0,\n          51.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Sicilia\",\n          \"Valle d'Aosta\",\n          \"Campania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404.1050254523617,\n        \"min\": 1300.0,\n        \"max\": 2699.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          1443.0,\n          1900.0,\n          2287.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SI\",\n          \"NO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario_Lordo_Annuo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5253.3653308807025,\n        \"min\": 16900.0,\n        \"max\": 35087.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          18759.0,\n          24700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Classe\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medio\",\n          \"Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["**TIPS AND TRICKS**: il metodo `.rename()`, come tanti altri metodi, contiene il parametro `inplace=` che, se impostato a `True`, modifica il daframe stesso che stiamo utilizzando."],"metadata":{"id":"IgdyAMKFyDBz"}},{"cell_type":"markdown","source":["## Eliminare una colonna"],"metadata":{"id":"cy_Ij7J_FbXU"}},{"cell_type":"markdown","source":["L'ultima operazione utile è poter eliminare una o più colonne.\n","\n","Eseguiamo questa operazione utilizzando il metodo [.drop()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.drop.html) specificando il nome della colonna o una *lista* di colonne che vogliamo eliminare.\n","\n","\n","Ad esempio eliminiamo da `data` la colonna `Salario_Lordo_Annuo` che abbiamo precedentemente craeto."],"metadata":{"id":"r61WBjDoFf1d"}},{"cell_type":"code","source":["data_drop_column = data.drop(\"Salario_Lordo_Annuo\", axis = 1)\n","\n","data_drop_column.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"IBmkOxMSHJ4g","executionInfo":{"status":"ok","timestamp":1712329903972,"user_tz":-120,"elapsed":340,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"a7ddc66e-c75e-4c46-cd9a-b6df0891225a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID      Nome   Età         Regione  Salario Verificato Classe\n","0  829744     Elona   NaN         Sicilia   1921.0         NO  Medio\n","1  800269    Cheikh  53.0         Abruzzo   1563.0         SI  Medio\n","2  823929  Girolama  30.0  Emilia Romagna   2144.0         SI   Alto"],"text/html":["\n","  <div id=\"df-73b16582-16a3-4c13-a0ca-b121d6f75632\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","      <th>Classe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>829744</td>\n","      <td>Elona</td>\n","      <td>NaN</td>\n","      <td>Sicilia</td>\n","      <td>1921.0</td>\n","      <td>NO</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>800269</td>\n","      <td>Cheikh</td>\n","      <td>53.0</td>\n","      <td>Abruzzo</td>\n","      <td>1563.0</td>\n","      <td>SI</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>823929</td>\n","      <td>Girolama</td>\n","      <td>30.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2144.0</td>\n","      <td>SI</td>\n","      <td>Alto</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73b16582-16a3-4c13-a0ca-b121d6f75632')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73b16582-16a3-4c13-a0ca-b121d6f75632 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73b16582-16a3-4c13-a0ca-b121d6f75632');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-770bd8ea-05ac-4b32-8f34-2792ef82948e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-770bd8ea-05ac-4b32-8f34-2792ef82948e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-770bd8ea-05ac-4b32-8f34-2792ef82948e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_drop_column","summary":"{\n  \"name\": \"data_drop_column\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28885,\n        \"min\": 800127,\n        \"max\": 899878,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          890182,\n          815406,\n          869501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 743,\n        \"samples\": [\n          \"Giuseppe antonio\",\n          \"Samuel\",\n          \"Domenico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.61055164109007,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          27.0,\n          51.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Sicilia\",\n          \"Valle d'Aosta\",\n          \"Campania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404.1050254523617,\n        \"min\": 1300.0,\n        \"max\": 2699.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          1443.0,\n          1900.0,\n          2287.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SI\",\n          \"NO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Classe\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medio\",\n          \"Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["Anche qui possiamo utilizzare il parametro `inplace=True`."],"metadata":{"id":"YPD0UzbLHsiw"}},{"cell_type":"code","source":["data.drop(\"Salario_Lordo_Annuo\", axis = 1, inplace = True)\n","\n","data.head()"],"metadata":{"id":"iNL4VFmLHx1a","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1712329910213,"user_tz":-120,"elapsed":390,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"d2cbe0c5-4a28-4379-b8d0-59669ed68c4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID      Nome   Età         Regione  Salario Verificato Classe\n","0  829744     Elona   NaN         Sicilia   1921.0         NO  Medio\n","1  800269    Cheikh  53.0         Abruzzo   1563.0         SI  Medio\n","2  823929  Girolama  30.0  Emilia Romagna   2144.0         SI   Alto\n","3  842108     Marwa  60.0          Umbria   1798.0         NO  Medio\n","4  861546       NaN  26.0         Toscana   2192.0         SI   Alto"],"text/html":["\n","  <div id=\"df-da24bb31-7f13-4e3c-bead-61c236d0d345\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","      <th>Classe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>829744</td>\n","      <td>Elona</td>\n","      <td>NaN</td>\n","      <td>Sicilia</td>\n","      <td>1921.0</td>\n","      <td>NO</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>800269</td>\n","      <td>Cheikh</td>\n","      <td>53.0</td>\n","      <td>Abruzzo</td>\n","      <td>1563.0</td>\n","      <td>SI</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>823929</td>\n","      <td>Girolama</td>\n","      <td>30.0</td>\n","      <td>Emilia Romagna</td>\n","      <td>2144.0</td>\n","      <td>SI</td>\n","      <td>Alto</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>842108</td>\n","      <td>Marwa</td>\n","      <td>60.0</td>\n","      <td>Umbria</td>\n","      <td>1798.0</td>\n","      <td>NO</td>\n","      <td>Medio</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>861546</td>\n","      <td>NaN</td>\n","      <td>26.0</td>\n","      <td>Toscana</td>\n","      <td>2192.0</td>\n","      <td>SI</td>\n","      <td>Alto</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da24bb31-7f13-4e3c-bead-61c236d0d345')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-da24bb31-7f13-4e3c-bead-61c236d0d345 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-da24bb31-7f13-4e3c-bead-61c236d0d345');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4212d1fb-18ec-4100-ad49-8c2b982376eb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4212d1fb-18ec-4100-ad49-8c2b982376eb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4212d1fb-18ec-4100-ad49-8c2b982376eb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28885,\n        \"min\": 800127,\n        \"max\": 899878,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          890182,\n          815406,\n          869501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 743,\n        \"samples\": [\n          \"Giuseppe antonio\",\n          \"Samuel\",\n          \"Domenico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.61055164109007,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          27.0,\n          51.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Sicilia\",\n          \"Valle d'Aosta\",\n          \"Campania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404.1050254523617,\n        \"min\": 1300.0,\n        \"max\": 2699.0,\n        \"num_unique_values\": 682,\n        \"samples\": [\n          1443.0,\n          1900.0,\n          2287.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SI\",\n          \"NO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Classe\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Medio\",\n          \"Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["## Esercizi\n"],"metadata":{"id":"UjYWDCrBH3pF"}},{"cell_type":"code","source":["import pandas as pd\n","path_dip_csv = \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/dipendenti.csv\"\n","data = pd.read_csv(path_dip_csv)"],"metadata":{"id":"XVmdEmeC0Sd0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Esercizio 8\n","Aggiungi una nuova colonna chiamata \"Stipendio_Orario\" al DataFrame che rappresenta il salario orario di ciascun dipendente (considerando 40 ore di lavoro settimanale)."],"metadata":{"id":"5XelUqrZp5_E"}},{"cell_type":"code","source":[],"metadata":{"id":"7YJsXs5i0ZDY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Esercizio 9\n","Aggiungi una nuova colonna chiamata \"Classe_Etaria\" che categorizzi gli individui in base all'età: \"Giovane\" per età inferiore a 30, \"Adulto\" per età compresa tra 30 e 50, e \"Anziano\" per età superiore a 50."],"metadata":{"id":"eW0-MQdrqZM9"}},{"cell_type":"code","source":[],"metadata":{"id":"tfF_gKKp0bJR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Esercizio 10\n","Prendi i dipendenti con un reddito inferiore a 1300€ e aggiungi loro 150€."],"metadata":{"id":"05k0nnJNqnxG"}},{"cell_type":"code","source":[],"metadata":{"id":"9yon1rJiqtTP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Esercizio 11\n","Rinomina la colonna \"Regione\" in \"Provenienza\" e la colonna \"ID\" in \"Matricola\" nel DataFrame. Utilizzare solo una volta la funzione rename."],"metadata":{"id":"ACZpJFuMqweJ"}},{"cell_type":"code","source":[],"metadata":{"id":"NjCUw60urILQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Esercizio 12\n","Calcola l'imposta sul reddito per ogni dipendente secondo le seguenti regole:\n","\n","- Nessuna imposta per redditi fino a 1500€\n","- 10% di imposta per redditi compresi tra 1500€ e 2500€\n","- 20% di imposta per redditi superiori a 2500€"],"metadata":{"id":"FzMsFJXfrPyQ"}},{"cell_type":"code","source":[],"metadata":{"id":"wp3pZ2BCrS7D"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Esercizio 13\n","Elimina le colonne \"Età\", \"Salario\" e \"Stipendio_Orario\", utilizza solo una volta la funzione drop."],"metadata":{"id":"YcESJO0NsEtS"}},{"cell_type":"code","source":[],"metadata":{"id":"m8OLDhzVsSEx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","---\n"],"metadata":{"id":"7lkjnBOISaY1"}},{"cell_type":"markdown","source":["# Gestire i dati che mancano\n","Non sempre i file csv che troviamo online hanno tutti i valori inseriti.\n","\n","Ad esempio il file \"dipendenti.csv\" ha dei valori nulli, questo lo possiamo osservare dalla colonna **Non-Null Count** quando utilizziamo il metodo `.info()` o contiamo quanti valori sono **NaN** utilizzando insieme i metodi [.isnull()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.isnull.html) e `.sum()`."],"metadata":{"id":"1lI_8yCoS_lL"}},{"cell_type":"code","source":["import pandas as pd\n","path_dip_csv = \"https://github.com/Cinofix/analisi-e-rappresentazione-dati/raw/main/data/dipendenti.csv\"\n","data = pd.read_csv(path_dip_csv)"],"metadata":{"id":"D62iQTSnScZG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TUqh0rSHTCt3","executionInfo":{"status":"ok","timestamp":1712330093006,"user_tz":-120,"elapsed":349,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"cbf2d808-10e4-4723-8909-d49033884d2b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000 entries, 0 to 999\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   ID          1000 non-null   int64  \n"," 1   Nome        977 non-null    object \n"," 2   Età         928 non-null    float64\n"," 3   Regione     854 non-null    object \n"," 4   Salario     905 non-null    float64\n"," 5   Verificato  949 non-null    object \n","dtypes: float64(2), int64(1), object(3)\n","memory usage: 47.0+ KB\n"]}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"id":"O8ZbesoqUhUv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712330230106,"user_tz":-120,"elapsed":289,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"c09efdb7-b81d-4b71-cc61-a6ea084f764a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID              0\n","Nome           23\n","Età            72\n","Regione       146\n","Salario        95\n","Verificato     51\n","dtype: int64"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["Inoltre, se vogliamo visualizzare soltanto le righe dove manca l'informazione relativa al **Salario** dei dipendenti possiamo creare una *maschera* utilizzare il metodo [.isna()](https://pandas.pydata.org/docs/reference/api/pandas.Series.isna.html)."],"metadata":{"id":"QDugScISzdpr"}},{"cell_type":"code","source":["data[data[\"Salario\"].isna()]"],"metadata":{"id":"xE_BxG6_Tn0e","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1712331490060,"user_tz":-120,"elapsed":474,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"4ba9bd9e-b273-4314-8841-934f2f08249c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID           Nome   Età        Regione  Salario Verificato\n","19   897435      Rita rosa  37.0      Lombardia      NaN         NO\n","25   894611  Franca angela  31.0        Sicilia      NaN         NO\n","32   872407        Morgana  33.0        Abruzzo      NaN         SI\n","43   826433        Barbara  61.0        Liguria      NaN         NO\n","53   896046        Ottavio  23.0  Valle d'Aosta      NaN         NO\n","..      ...            ...   ...            ...      ...        ...\n","891  813696          Mehdi  29.0        Toscana      NaN         NO\n","918  807356           John  22.0       Piemonte      NaN         NO\n","935  862770           Anna  55.0        Abruzzo      NaN         NO\n","949  827424       Marioara  39.0            NaN      NaN         SI\n","988  858450         Bianca  52.0         Puglia      NaN         NO\n","\n","[95 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-dd48dcc3-728d-4c65-90d1-28706dafeea5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Nome</th>\n","      <th>Età</th>\n","      <th>Regione</th>\n","      <th>Salario</th>\n","      <th>Verificato</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>19</th>\n","      <td>897435</td>\n","      <td>Rita rosa</td>\n","      <td>37.0</td>\n","      <td>Lombardia</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>894611</td>\n","      <td>Franca angela</td>\n","      <td>31.0</td>\n","      <td>Sicilia</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>872407</td>\n","      <td>Morgana</td>\n","      <td>33.0</td>\n","      <td>Abruzzo</td>\n","      <td>NaN</td>\n","      <td>SI</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>826433</td>\n","      <td>Barbara</td>\n","      <td>61.0</td>\n","      <td>Liguria</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>896046</td>\n","      <td>Ottavio</td>\n","      <td>23.0</td>\n","      <td>Valle d'Aosta</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>891</th>\n","      <td>813696</td>\n","      <td>Mehdi</td>\n","      <td>29.0</td>\n","      <td>Toscana</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>918</th>\n","      <td>807356</td>\n","      <td>John</td>\n","      <td>22.0</td>\n","      <td>Piemonte</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>935</th>\n","      <td>862770</td>\n","      <td>Anna</td>\n","      <td>55.0</td>\n","      <td>Abruzzo</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","    <tr>\n","      <th>949</th>\n","      <td>827424</td>\n","      <td>Marioara</td>\n","      <td>39.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>SI</td>\n","    </tr>\n","    <tr>\n","      <th>988</th>\n","      <td>858450</td>\n","      <td>Bianca</td>\n","      <td>52.0</td>\n","      <td>Puglia</td>\n","      <td>NaN</td>\n","      <td>NO</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>95 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd48dcc3-728d-4c65-90d1-28706dafeea5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd48dcc3-728d-4c65-90d1-28706dafeea5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd48dcc3-728d-4c65-90d1-28706dafeea5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-290c9504-52bf-46da-8ec6-d029d410e606\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-290c9504-52bf-46da-8ec6-d029d410e606')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-290c9504-52bf-46da-8ec6-d029d410e606 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data[data[\\\"Salario\\\"]\",\n  \"rows\": 95,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30064,\n        \"min\": 801844,\n        \"max\": 899122,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          852513,\n          876271,\n          897733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"Agata\",\n          \"Maria orazia\",\n          \"Jannat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Et\\u00e0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.337563431549192,\n        \"min\": 18.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          43.0,\n          19.0,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Regione\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Lombardia\",\n          \"Friuli-Venezia Giulia\",\n          \"Campania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Verificato\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["## Come risolvere il problema ?\n","\n","Abbiamo osservato che esistono dei dati mancanti, come si potrebbe agire per risolvere il problema?"],"metadata":{"id":"lGFCYiDF2KB0"}},{"cell_type":"markdown","source":["### Soluzione 1: rimuovere i dati con **.dropna()**"],"metadata":{"id":"nEhYHnz824kg"}},{"cell_type":"markdown","source":["Questa prima soluzione prevede di eliminare completamente le righe dove i dati mancano tramite l'utilizzo del metodo [.dropna()](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dropna.html)."],"metadata":{"id":"llXSjbmA27dz"}},{"cell_type":"code","source":["df_drop_na = data.dropna()\n","\n","df_drop_na.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YuCMDpcV0_Xl","executionInfo":{"status":"ok","timestamp":1712330603878,"user_tz":-120,"elapsed":291,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"d57ea801-3e90-4303-a09a-ab22bd345956"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 668 entries, 1 to 997\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   ID          668 non-null    int64  \n"," 1   Nome        668 non-null    object \n"," 2   Età         668 non-null    float64\n"," 3   Regione     668 non-null    object \n"," 4   Salario     668 non-null    float64\n"," 5   Verificato  668 non-null    object \n","dtypes: float64(2), int64(1), object(3)\n","memory usage: 36.5+ KB\n"]}]},{"cell_type":"markdown","source":["Di base, il metodo `.dropna()` elimina tutte le righe dove è presente **almeno un** valore nullo.\n","\n","Può capitare di essere interessati ad eliminare le righe dove i valori nulli sono presenti in un `subset` di una o più colonne, facendo attenzione che rimarrebbero comunque eventuali valori nulli nelle altre colonne."],"metadata":{"id":"_dV2A-iQ6Cs3"}},{"cell_type":"code","source":["data.dropna(subset=[\"Salario\"]).info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nzHOyD-V3gx6","executionInfo":{"status":"ok","timestamp":1712330833374,"user_tz":-120,"elapsed":3,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"dc58cfac-fc6b-4aa7-b380-9ac4adf0b4aa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 905 entries, 0 to 999\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   ID          905 non-null    int64  \n"," 1   Nome        883 non-null    object \n"," 2   Età         837 non-null    float64\n"," 3   Regione     772 non-null    object \n"," 4   Salario     905 non-null    float64\n"," 5   Verificato  859 non-null    object \n","dtypes: float64(2), int64(1), object(3)\n","memory usage: 49.5+ KB\n"]}]},{"cell_type":"markdown","source":["### Soluzione 2: sostituire i valori mancanti con **.fillna()**"],"metadata":{"id":"vcUns6jn65hz"}},{"cell_type":"markdown","source":["Nel caso eliminare le righe con valori nulli riducesse di molto la dimensione del nostro dataset, potrebbe risulare utile rimpiazzare tali valori con qualcos'altro.\n","\n","In particolare, il metodo [.fillna(`value`)](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna) ci permette di fare esattamente questo."],"metadata":{"id":"vcECInW17VOq"}},{"cell_type":"code","source":["data_fill_na = data.fillna(0)\n","print(data_fill_na.head(3))\n","print(\"-\"*70)\n","print(data_fill_na.tail(3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LSGS6CcF9ZfY","executionInfo":{"status":"ok","timestamp":1712331063044,"user_tz":-120,"elapsed":305,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"87209051-e0da-4d44-91cb-ec8463781ae3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       ID      Nome   Età         Regione  Salario Verificato\n","0  829744     Elona   0.0         Sicilia   1921.0         NO\n","1  800269    Cheikh  53.0         Abruzzo   1563.0         SI\n","2  823929  Girolama  30.0  Emilia Romagna   2144.0         SI\n","----------------------------------------------------------------------\n","         ID         Nome   Età   Regione  Salario Verificato\n","997  886127  Carla maria  23.0  Campania   2149.0         NO\n","998  847566     El mehdi  32.0         0   1817.0         NO\n","999  891216        Suada  23.0         0   2623.0         NO\n"]}]},{"cell_type":"code","source":["print(data_fill_na.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n3EYl9XMR1-A","executionInfo":{"status":"ok","timestamp":1712331066136,"user_tz":-120,"elapsed":3,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"a310d4f3-502a-4502-d315-890d611fb3fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000 entries, 0 to 999\n","Data columns (total 6 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   ID          1000 non-null   int64  \n"," 1   Nome        1000 non-null   object \n"," 2   Età         1000 non-null   float64\n"," 3   Regione     1000 non-null   object \n"," 4   Salario     1000 non-null   float64\n"," 5   Verificato  1000 non-null   object \n","dtypes: float64(2), int64(1), object(3)\n","memory usage: 47.0+ KB\n","None\n"]}]},{"cell_type":"markdown","source":["Però non sempre sostituire tutti NaN con lo stesso valore va bene. Ad esempio, impostare i valori di \"Età\" o \"Salario\" a 0 potrebbe avere un senso, invece \"Regione\" ne ha già meno.\n","\n","Per risolvere questo problema possiamo passare al parametro `value` di `.fillna()` un dizionario per specificare che valore vogliamo sosituire per ogni colonna."],"metadata":{"id":"rgFade3MNaMW"}},{"cell_type":"code","source":["fill_values = {\"Nome\":\"Sconosciuto\", \"Età\": 33,\n","               \"Regione\": \"Non registrata\", \"Salario\": 1450, \"Verificato\":\"NO\"}\n","\n","maschera_nome_nullo = data[\"Nome\"].isna()\n","\n","data_fill_na = data.fillna(value=fill_values)\n","\n","print(data[maschera_nome_nullo].head(3))\n","print(\"-\"*70)\n","print(data_fill_na[maschera_nome_nullo].head(3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJhgIgWs940O","executionInfo":{"status":"ok","timestamp":1712331662193,"user_tz":-120,"elapsed":311,"user":{"displayName":"Giovanni Scodeller","userId":"17213792352150355085"}},"outputId":"47b4cb6e-6855-4eb0-b7ec-82b14baa0c9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         ID Nome   Età         Regione  Salario Verificato\n","4    861546  NaN  26.0         Toscana   2192.0         SI\n","72   878054  NaN  48.0  Emilia Romagna   1642.0         SI\n","114  867706  NaN  34.0       Lombardia      NaN         SI\n","----------------------------------------------------------------------\n","         ID         Nome   Età         Regione  Salario Verificato\n","4    861546  Sconosciuto  26.0         Toscana   2192.0         SI\n","72   878054  Sconosciuto  48.0  Emilia Romagna   1642.0         SI\n","114  867706  Sconosciuto  34.0       Lombardia   1450.0         SI\n"]}]},{"cell_type":"markdown","source":["## Esercizi:"],"metadata":{"id":"Ebq3nwotXQuM"}},{"cell_type":"markdown","source":["### Esercizio 14\n","Sostituire i valori numerici nulli di \"Salario\" ed \"Età\" con il relativo valore medio della colonna utilizzando fillna. Salvare il risultato in una variabile chiamata \"data_sal_eta_ok\"."],"metadata":{"id":"_6zRgTMz7A2k"}},{"cell_type":"code","source":[],"metadata":{"id":"jD0xNqANDaVg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Esercizio 15\n","\n","Caricare il file csv \"dipendenti2.csv\" e rimuovere tutti i dipendenti senza nome, dopodichè creare una nuova colonna \"Buono_pasto\" con costo pari ad 1 ora lavorativa.\n","\n","Dopodichè controllare se la colonna \"Buono_pasto\" ha dei valori nulli, nel caso sostiturili con il valore del buono pasto meno costoso."],"metadata":{"id":"bVF3vZw7D0al"}},{"cell_type":"code","source":[],"metadata":{"id":"Tki5DLC_PO1_"},"execution_count":null,"outputs":[]}]}